"""
ex5.py

Код для решение пятого практического задания: 'римский конвертр'

Основные возможности:
    1. Конвертировать обычные цифры в римские
    2. Конвертировать римские цифры в обычные
"""
def arabic_to_roman(num):
    """
    Конвертирует арабское число в римское.
    
    Args:
        num (int): Арабское число для конвертации
    
    Returns:
        str: Римское число
    """
    # Список кортежей (значение, символ) в порядке убывания значений
    # Включает как основные символы, так и комбинации для вычитания (IV, IX, XL и т.д.)
    val = [
        (1000, 'M'), (900, 'CM'), (500, 'D'), (400, 'CD'),
        (100, 'C'), (90, 'XC'), (50, 'L'), (40, 'XL'),
        (10, 'X'), (9, 'IX'), (5, 'V'), (4, 'IV'),
        (1, 'I')
    ]
    result = []
    
    for value, symbol in val:

        while num >= value:
            result.append(symbol)  # Добавляем символ в результат
            num -= value           # Вычитаем значение из числа
    
    return ''.join(result)


def roman_to_arabic(roman):
    """
    Конвертирует римское число в арабское.
    
    Args:
        roman (str): Римское число для конвертации
    
    Returns:
        int: Арабское число
    """
    # Словарь для преобразования отдельных римских символов в числовые значения
    symbols = {
        'I': 1, 'V': 5, 'X': 10, 'L': 50,
        'C': 100, 'D': 500, 'M': 1000
    }
    result = 0       # Переменная для накопления результата
    prev_value = 0   # Значение предыдущего символа (инициализируем 0)
    
    # Обрабатываем строку справа налево (с младших разрядов к старшим)
    for char in reversed(roman):
        current_value = symbols[char]
        
        # Логика вычитания: если текущий символ меньше предыдущего,
        if current_value < prev_value:
            result -= current_value
        else:
            result += current_value
        
        prev_value = current_value 
    
    return result